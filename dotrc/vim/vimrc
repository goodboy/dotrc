" File:     ~/.vimrc files
" Author:   Simon Gomizelj
" Edit:     Tyler Goodlet
"      -> removed cursor line for my slow laptop
"      -> added custom command 'Share'
" ----------------------------------------------------------------------------

set nocompatible

filetype off
runtime bundle/pathogen/autoload/pathogen.vim
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

syntax on
filetype plugin indent on
colorscheme diablo3

" GENERAL {{{1
" -----------------------------

" formatting
set tabstop=4
set shiftwidth=4
set smartindent
set linebreak
set nolist
set nowrap
set textwidth=72
set wrapmargin=0
set formatoptions=qn1

" searching
set hlsearch
set smartcase
set incsearch

" editing
set list
set listchars=tab:\ \ ,extends:$,precedes:^
set nrformats+=alpha

" folding
set foldenable
set foldmethod=marker
set foldmarker={{{,}}}
set foldcolumn=1
set backspace=indent,eol,start

" spelling
set spelllang=en_ca
set spellfile=~/.vim/dict.add

" vim ui
set autoread
set autowrite
set showcmd
set title
set ruler
set number
"set cursorline
set shortmess=at
set hidden
set laststatus=2
set wildmenu
set wildmode=list:longest,full
set completeopt=longest,menuone
set history=50
set confirm
set equalalways
set mouse=a

set wildignore+=.hg,.git,.svn                  " version control
set wildignore+=*.aux,*.out,*.toc              " LaTeX intermediate files
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg " images files
set wildignore+=*.a*.o,*.obj,*.so,*.hi         " compiled object files
set wildignore+=*.pyc                          " python byte code
set wildignore+=*.spl                          " compiled spell lists

" backup
set backup
set backupdir=~/.vim/backups
set dir=~/.vim/tmp
set undofile
set undodir=~/.vim/undo

" path
set path=.,,/usr/include,/usr/lib

" AUTOCMDS {{{1
" ----------------------------
au VimResized   * exe "normal! \<c-w>="
au BufWritePre  * if ! &bin | silent! :call spaces#StripTrailing()<CR>
au BufWritePost * if getline(1) =~ "^#!" | silent :!chmod +x <afile>

" CUSTOM COMMANDS {{{1
"                             
command -range=% Share :<line1>,<line2>write !curl -F "sprunge=<-" http://sprunge.us|xclip

" MAPPINGS {{{1
" ----------------------------

" for common typos
command! Q q
command! W w
command! Qa qa
command! Wq wq
command! Wa wa
command! Wqa wqa

command! Ww w !wc -w

" sane j k actions
nnoremap j gj
nnoremap k gk

" map Y to act like D and C; yank till end of line
map Y y$

" shortcut to update diff
nnoremap <silent> <leader>c :call toggle#ToggleList("Quickfix List", 'c')<CR>
nnoremap <silent> <leader>d :diffupdate<CR>
nnoremap <silent> <leader>h :nohl<CR>
nnoremap <silent> <leader>l :ls<CR>:b<space>
nnoremap <silent> <leader>s :setl spell!<CR>
nnoremap <silent> <leader>w :call spaces#StripTrailing()<CR>
nnoremap <silent> <leader>p :!sprunge "%"<CR>

" window movements
nmap <silent> <C-H> :winc h<CR>
nmap <silent> <C-J> :winc j<CR>
nmap <silent> <C-K> :winc k<CR>
nmap <silent> <C-L> :winc l<CR>

" map space to create/open/close fold
nnoremap <silent> <Space> @=(foldlevel('.')?'za':'l')<CR>
vnoremap <Space> zf

" changing dictionaries
command! Fr setl spelllang=fr
command! En setl spelllang=en_ca
command! Sl setl spelllang=sl

" bindings for building code
nnoremap <F5>   :make<CR>
nnoremap <S-F6> :!./"%"<CR>

" PLUGINS {{{1
" ----------------------------

" set vim to download files with curl
let g:netrw_http_cmd  = "curl"
let g:netrw_http_xcmd = "-so"

" snippets config
let snips_author = 'Tyler Goodlet'
let snips_email  = 'tgoodlet@gmail.com'

" NERDTree config
let g:NERDTreeChDirMode     = 2
let g:NERDTreeIgnore        = ['\~$', '\.swp$', '\.o$', '\.hi$']
let g:NERDTreeSortOrder     = ['^__\.py$', '\/$', '*', '\~$']
let g:NERDTreeShowBookmarks = 1
let g:NERDTreeMinimalUI     = 1
nnoremap <silent> <F9> :NERDTreeToggle<CR>

" SuperTab config
let g:SuperTabDefaultCompletionType = "context"

" gundo config
nnoremap <silent> <leader>u :GundoToggle<CR>

" fugative config
nnoremap <silent> <leader>gd :Gdiff<CR>
nnoremap <silent> <leader>gb :Gbrowse<CR>

" tagbar config
nnoremap <silent> <leader>t :TagbarToggle<CR>

" tabular config
nnoremap <silent> <leader>== :Tabular /=<CR>

" HASKELL

" haskellmode config
" let g:haddock_browser = "/usr/bin/firefox"
" let g:ghc = "/usr/bin/ghc"
" let g:haddock_docdir="/usr/share/doc/ghc/html/"
" let g:haddock_indexfiledir="~/.vim/"
" let g:wget="/usr/bin/wget"
" au Filetype haskell compiler ghc
