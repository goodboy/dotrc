theme = "rasmus"  # luv them greens
# theme = "everblush"

# ------ - ------

[editor]
true-color = true
color-modes = true
auto-info = false  # show helper dialog-windows?
mouse = true


[editor.statusline]
left = ["mode", "file-name", "file-modification-indicator"]
center = ["spinner"]
right = [
  # 'mode',
  "file-line-ending",
  "separator",
  "position",
  "separator",
  "spacer",
  "position-percentage",
]
separator = "â”‚"

# [editor.file-picker]
# hidden = true

[editor.cursor-shape]
# to that you can see wtf the implied selection is XD
normal = "bar"
insert = "bar"
select = "underline"

[editor.lsp]
# display-messages = true

# ------ - ------

# At most one section each of 'keys.normal', 'keys.insert' and 'keys.select'
[keys.normal]
# hard mode cancel: ctl-c always is cancel to NOR
C-c = ["collapse_selection", "normal_mode"]
A-l = ["collapse_selection", "normal_mode"]

# config mgmt
C-o = ":config-open"
C-r = ":config-reload"

# CUSTOM-vim-remaps
# ----- - ------
# window nav
# C-l = 'jump_view_right'
# C-k = 'jump_view_up'
# C-l = 'jump_view_right'
# C-h = 'jump_view_left'

# paragraph nav
# A-j = "goto_next_paragraph"
# A-k = "goto_prev_paragraph"
A-j = "goto_next_parameter"
A-k = "goto_prev_parameter"

# (FROM VIM REPO)
# Muscle memory
"{" = ["goto_prev_paragraph", "collapse_selection"]
"}" = ["goto_next_paragraph", "collapse_selection"]
0 = "goto_line_start"
"$" = "goto_line_end"
"^" = "goto_first_nonwhitespace"
G = "goto_file_end"
# "%" = "match_brackets"

# editz from NOR
V = ["select_mode", "extend_to_line_bounds"]
C = ["extend_to_line_end", "yank_main_selection_to_clipboard", "delete_selection", "insert_mode"]
D = ["extend_to_line_end", "yank_main_selection_to_clipboard", "delete_selection"]
# S = "surround_add" # Would be nice to be able to do something after this but it isn't chainable

# del, yank and paste
x = "delete_selection"
p = ["paste_clipboard_after", "collapse_selection"]
P = ["paste_clipboard_before", "collapse_selection"]
# Would be nice to add ya and yi, but the surround commands can't be chained
Y = ["extend_to_line_end", "yank_main_selection_to_clipboard", "collapse_selection"]

# this makes w and b behave as they do Vim
# https://github.com/LGUG2Z/helix-vim/blob/master/config.toml#L36
w = ["move_next_word_start", "move_char_right", "collapse_selection"]
e = ["move_next_word_end", "collapse_selection"]
b = ["move_prev_word_start", "collapse_selection"]


# If you want to keep the selection-while-moving behaviour of Helix, this two lines will help a lot,
# especially if you find having text remain selected while you have switched to insert or append mode
#
# There is no real difference if you have overridden the commands bound to 'w', 'e' and 'b' like above
# But if you really want to get familiar with the Helix way of selecting-while-moving, comment the
# bindings for 'w', 'e', and 'b' out and leave the bindings for 'i' and 'a' active below. A world of difference!
i = ["insert_mode", "collapse_selection"]
a = ["append_mode", "collapse_selection"]

# Undoing the 'd' + motion commands restores the selection which is annoying
u = ["undo", "collapse_selection"]

# search by hotkey
# Search for word under cursor
"*" = ["move_char_right", "move_prev_word_start", "move_next_word_end", "search_selection", "search_next"]
"#" = ["move_char_right", "move_prev_word_start", "move_next_word_end", "search_selection", "search_prev"]

# Make j and k behave as they do Vim when soft-wrap is enabled
j = "move_line_down"
k = "move_line_up"

# Extend and select commands that expect a manual input can't be chained
# I've kept d[X] commands here because it's better to at least have the stuff you want to delete
# selected so that it's just a keystroke away to delete
[keys.normal.c]
# c = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "change_selection"]
w = ["move_next_word_start", "yank_main_selection_to_clipboard", "change_selection"]
e = ["move_next_word_end", "yank_main_selection_to_clipboard", "change_selection"]

[keys.normal.d]
d = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "delete_selection"]
t = ["extend_till_char"]
s = ["surround_delete"]
# i = ["select_textobject_inner"]
# a = ["select_textobject_around"]
# j = ["select_mode", "extend_to_line_bounds", "extend_line_below", "yank_main_selection_to_clipboard", "delete_selection", "normal_mode"]
# down = ["select_mode", "extend_to_line_bounds", "extend_line_below", "yank_main_selection_to_clipboard", "delete_selection", "normal_mode"]
# k = ["select_mode", "extend_to_line_bounds", "extend_line_above", "yank_main_selection_to_clipboard", "delete_selection", "normal_mode"]
# up = ["select_mode", "extend_to_line_bounds", "extend_line_above", "yank_main_selection_to_clipboard", "delete_selection", "normal_mode"]
G = ["select_mode", "extend_to_line_bounds", "goto_last_line", "extend_to_line_bounds", "yank_main_selection_to_clipboard", "delete_selection", "normal_mode"]
w = ["move_next_word_start", "yank_main_selection_to_clipboard", "delete_selection"]
W = ["move_next_long_word_start", "yank_main_selection_to_clipboard", "delete_selection"]
g = { g = ["select_mode", "extend_to_line_bounds", "goto_file_start", "extend_to_line_bounds", "yank_main_selection_to_clipboard", "delete_selection", "normal_mode"] }

[keys.normal.y]
y = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "normal_mode", "collapse_selection"]
w = ["move_next_word_start", "yank_main_selection_to_clipboard", "delete_selection"]
G = ["select_mode", "extend_to_line_bounds", "goto_last_line", "extend_to_line_bounds", "yank_main_selection_to_clipboard", "collapse_selection", "normal_mode"]
g = { g = ["select_mode", "extend_to_line_bounds", "goto_file_start", "extend_to_line_bounds", "yank_main_selection_to_clipboard", "collapse_selection", "normal_mode"] }

[keys.normal.g]
# like C-i/o xcept stick with the whole 'g for go' type thing
i = 'jump_forward'
o = 'jump_backward'
# comment toggle then move to normal mode
c = [
  "select_mode",
  "extend_to_line_bounds",
  'toggle_comments',
  'normal_mode'
]
# "TAG" nav but using LSP
j = 'goto_definition'
'/' = 'goto_reference'
k = 'goto_reference'
']' = 'goto_reference'
# NOTE: NONE of these seem to work?
# 'C-]' = 'goto_definition'
#[keys.normal.{]
#{ = 'goto_prev_function'
#[keys.normal.{]
#k = 'goto_prev_function'
# '[[' = 'goto_prev_class'
# ']]' = 'goto_next_class'


[keys.insert]
C-c = ["collapse_selection", "normal_mode"]
A-l = ["collapse_selection", "normal_mode"]
#g = { a = "code_action" } # Maps `ga` to show possible code actions
#j = { k = "normal_mode" } # Maps `jk` to exit insert mode


[keys.select]
C-c = ["collapse_selection", "keep_primary_selection", "normal_mode"]
A-l = ["collapse_selection", "keep_primary_selection", "normal_mode"]

# braces don't seem to work?
"{" = ["extend_to_line_bounds", "goto_prev_paragraph"]
"}" = ["extend_to_line_bounds", "goto_next_paragraph"]
0 = "goto_line_start"
"$" = "goto_line_end"
# "^" = "goto_first_nonwhitespace"  # never used it..
G = "goto_file_end"
D = ["extend_to_line_bounds", "delete_selection", "normal_mode"]
C = ["goto_line_start", "extend_to_line_bounds", "change_selection"]
#"%" = "match_brackets"  # use helix's `mm`instead B)
S = "surround_add" # Basically 99% of what I use vim-surround for
u = ["switch_to_lowercase", "collapse_selection", "normal_mode"]
U = ["switch_to_uppercase", "collapse_selection", "normal_mode"]

# Visual-mode specific muscle memory
i = "select_textobject_inner"
a = "select_textobject_around"

# Make selecting lines in visual mode behave sensibly
k = ["extend_line_up", "extend_to_line_bounds"]
j = ["extend_line_down", "extend_to_line_bounds"]

# Clipboards over registers ye ye
d = ["yank_main_selection_to_clipboard", "delete_selection"]
x = ["yank_main_selection_to_clipboard", "delete_selection"]
y = ["yank_main_selection_to_clipboard", "normal_mode", "flip_selections", "collapse_selection"]
Y = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "goto_line_start", "collapse_selection", "normal_mode"]
p = "replace_selections_with_clipboard" # No life without this
P = "paste_clipboard_before"

[keys.select.g]
c = ['toggle_comments', 'normal_mode']
